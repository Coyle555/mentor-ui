{"version":3,"file":"main.1a16bd4c0026a9d06c5d.bundle.js","sources":["webpack:///./src/components/mentor-inputs/src/components/float-input/floatInput.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { useInputState } from '../../hooks/index';\n\nimport '../../styles/index.less';\n\nconst FloatInput = ({ validation, precision, ...props }) => {\n\n\tconst validate = [ isFloat, validation ];\n\n\tconst inputState = useInputState({ validate, parse, ...props });\n\tconst inputClasses = classNames('apm-mi-form-control', props.className);\n\n\tfunction parse(value) {\n\t\tif (isNaN(value)) {\n\t\t\t//avoid passing NaN into input \n\t\t\treturn ''; \n\t\t} else if (!isNaN(precision)) {\n\t\t\treturn Number(parseFloat(value).toFixed(precision))\n\t\t} else {\n\t\t\treturn parseFloat(value);\n\t\t}\t\n\t}\n\n\treturn (\n\t\t<input\n\t\t\t{...props}\n\t\t\t{...inputState}\n\t\t\tclassName={inputClasses}\n\t\t\tstep=\"any\"\n\t\t\ttype=\"number\"\n\t\t/>\t\t\n\t)\n}\n\n\nfunction isFloat(value) {\n\tif (value != 0 && !parseFloat(value)) return 'Please enter a decimal value';\n}\nexport default FloatInput;\n\n"],"mappings":"AAQA","sourceRoot":""}